// <auto-generated />
using System;
using CZM1.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CZM1.API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250704081440_maxduzina2")]
    partial class maxduzina2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajDokumentacijaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("EksterniUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("HistorijskiDogadjajInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("PrikaziUDogadjaju")
                        .HasColumnType("bit");

                    b.Property<bool>("PrikaziUPitanju")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HistorijskiDogadjajInfoId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("HistorijskiDogadjajDokumentacije");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<bool>("GreskaUkalendaru")
                        .HasColumnType("bit");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("RegijaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RegijaId");

                    b.ToTable("HistorijskiDogadjaji");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajSlikaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("HistorijskiDogadjajInfoId")
                        .HasColumnType("int");

                    b.Property<string>("IzvorInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("IzvorUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<bool>("PrikaziUDogadjaju")
                        .HasColumnType("bit");

                    b.Property<bool>("PrikaziUPitanju")
                        .HasColumnType("bit");

                    b.Property<int>("Redoslijed")
                        .HasColumnType("int");

                    b.Property<string>("SlikaPath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HistorijskiDogadjajInfoId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("HistorijskiDogadjajSlike");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajVideoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("HistorijskiDogadjajInfoId")
                        .HasColumnType("int");

                    b.Property<string>("IzvorInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("IzvorUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<bool>("PrikaziUDogadjaju")
                        .HasColumnType("bit");

                    b.Property<bool>("PrikaziUPitanju")
                        .HasColumnType("bit");

                    b.Property<int>("Redoslijed")
                        .HasColumnType("int");

                    b.Property<int>("VideoDuzinaSek")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HistorijskiDogadjajInfoId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("HistorijskiDogadjajVideo");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.KategorijaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.RegijaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Regija");
                });

            modelBuilder.Entity("CZM1.API.Models.Korisnici.AutentikacijaTokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("AutentikacijaTokeni");
                });

            modelBuilder.Entity("CZM1.API.Models.Korisnici.InstitucijaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Institucije");
                });

            modelBuilder.Entity("CZM1.API.Models.Korisnici.KorisnikEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("InstitucijaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutUntil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucijaId");

                    b.HasIndex("NormalizedEmail")
                        .IsUnique();

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Kvizovi");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizPitanjaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("KvizId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("PitanjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PitanjeId");

                    b.HasIndex("KvizId", "PitanjeId")
                        .IsUnique();

                    b.ToTable("KvizPitanja");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizRezultatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojTacnih")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("KvizId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("RezultatProcenat")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("UkupnoPitanja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("KvizId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("KvizRezultati");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizRezultatKorisnickiOdgovorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("OdgovorId")
                        .HasColumnType("int");

                    b.Property<int>("PitanjeId")
                        .HasColumnType("int");

                    b.Property<int>("RezultatId")
                        .HasColumnType("int");

                    b.Property<bool>("Tacno")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OdgovorId");

                    b.HasIndex("PitanjeId");

                    b.HasIndex("RezultatId", "PitanjeId")
                        .IsUnique()
                        .HasDatabaseName("UX_KorisnickiOdgovor_RezultatId_PitanjeId");

                    b.ToTable("KvizRezultatiKorisnickiOdgovori");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.PitanjaPonudjenaOpcijaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("PitanjeId")
                        .HasColumnType("int");

                    b.Property<bool>("Tacan")
                        .HasColumnType("bit");

                    b.Property<string>("TekstOdgovora")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PitanjeId", "TekstOdgovora")
                        .IsUnique();

                    b.ToTable("KvizPitanjaPonudjeneOpcije");
                });

            modelBuilder.Entity("CZM1.API.Models.M04Kviz.PitanjeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojBodova")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("HistorijskiDogadjajId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAktivan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("TekstPitanja")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("TezinaPitanja")
                        .HasColumnType("int");

                    b.Property<int>("TipPitanja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HistorijskiDogadjajId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pitanja");
                });

            modelBuilder.Entity("CZM1.API.Models.Novosti.NovostEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DatumNaObavijestiUtc")
                        .HasColumnType("date");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DatumNaObavijestiUtc");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("CZM1.API.Models.Novosti.NovostSlikaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("IzvorInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("IzvorUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("NovostId")
                        .HasColumnType("int");

                    b.Property<int>("Redoslijed")
                        .HasColumnType("int");

                    b.Property<string>("SlikaPath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("NovostId");

                    b.ToTable("NovostSlike");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajDokumentacijaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", "HistorijskiDogadjaj")
                        .WithMany("Dokumentacijas")
                        .HasForeignKey("HistorijskiDogadjajInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("HistorijskiDogadjaj");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kalendar.KategorijaEntity", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kalendar.RegijaEntity", "Regija")
                        .WithMany()
                        .HasForeignKey("RegijaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Kategorija");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Regija");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajSlikaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", "HistorijskiDogadjajInfo")
                        .WithMany("DogadjajSlikas")
                        .HasForeignKey("HistorijskiDogadjajInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("HistorijskiDogadjajInfo");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajVideoEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", "HistorijskiDogadjajInfo")
                        .WithMany("DogadjajVideos")
                        .HasForeignKey("HistorijskiDogadjajInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("HistorijskiDogadjajInfo");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.KategorijaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.RegijaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Korisnici.AutentikacijaTokenEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("CZM1.API.Models.Korisnici.KorisnikEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.InstitucijaEntity", "Institucija")
                        .WithMany()
                        .HasForeignKey("InstitucijaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Institucija");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizPitanjaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kviz.KvizEntity", "Kviz")
                        .WithMany("Pitanja")
                        .HasForeignKey("KvizId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.M04Kviz.PitanjeEntity", "Pitanje")
                        .WithMany()
                        .HasForeignKey("PitanjeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Kviz");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Pitanje");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizRezultatEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Kviz.KvizEntity", "Kviz")
                        .WithMany()
                        .HasForeignKey("KvizId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Korisnik");

                    b.Navigation("Kviz");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizRezultatKorisnickiOdgovorEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kviz.PitanjaPonudjenaOpcijaEntity", "Odgovor")
                        .WithMany()
                        .HasForeignKey("OdgovorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.M04Kviz.PitanjeEntity", "Pitanje")
                        .WithMany()
                        .HasForeignKey("PitanjeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Kviz.KvizRezultatEntity", "Rezultat")
                        .WithMany("KorisnickiOdgovori")
                        .HasForeignKey("RezultatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Odgovor");

                    b.Navigation("Pitanje");

                    b.Navigation("Rezultat");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.PitanjaPonudjenaOpcijaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.M04Kviz.PitanjeEntity", "Pitanje")
                        .WithMany("Odgovori")
                        .HasForeignKey("PitanjeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Pitanje");
                });

            modelBuilder.Entity("CZM1.API.Models.M04Kviz.PitanjeEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", "HistorijskiDogadjaj")
                        .WithMany()
                        .HasForeignKey("HistorijskiDogadjajId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("HistorijskiDogadjaj");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Novosti.NovostEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Korisnik");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("CZM1.API.Models.Novosti.NovostSlikaEntity", b =>
                {
                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Korisnici.KorisnikEntity", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CZM1.API.Models.Novosti.NovostEntity", "Novost")
                        .WithMany("NovostiSlikes")
                        .HasForeignKey("NovostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Novost");
                });

            modelBuilder.Entity("CZM1.API.Models.Kalendar.HistorijskiDogadjajEntity", b =>
                {
                    b.Navigation("DogadjajSlikas");

                    b.Navigation("DogadjajVideos");

                    b.Navigation("Dokumentacijas");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizEntity", b =>
                {
                    b.Navigation("Pitanja");
                });

            modelBuilder.Entity("CZM1.API.Models.Kviz.KvizRezultatEntity", b =>
                {
                    b.Navigation("KorisnickiOdgovori");
                });

            modelBuilder.Entity("CZM1.API.Models.M04Kviz.PitanjeEntity", b =>
                {
                    b.Navigation("Odgovori");
                });

            modelBuilder.Entity("CZM1.API.Models.Novosti.NovostEntity", b =>
                {
                    b.Navigation("NovostiSlikes");
                });
#pragma warning restore 612, 618
        }
    }
}
